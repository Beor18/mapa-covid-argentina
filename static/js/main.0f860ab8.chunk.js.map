{"version":3,"sources":["data/config.js","components/Tabla.jsx","components/Map.jsx","components/Estadistica.jsx","App.js","serviceWorker.js","index.js"],"names":["URL","columns","id","label","minWidth","align","useStyles","makeStyles","root","width","container","maxHeight","Tabla","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","tabla","setTabla","useEffect","axios","get","then","res","data","rows","map","e","Paper","className","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","key","style","table_head","TableBody","slice","row","hover","role","tabIndex","value","format","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","wrapper","height","margin","display","flex","geojsonMarkerOptions2017","radius","fillColor","color","weight","opacity","fillOpacity","Map","markerPosition","setData","socketIOClient","on","pointToLayer2017","feature","latlng","L","circleMarker","handleOnEachFeature","features","layer","popupContent","properties","lugar","bindPopup","mouseover","openPopup","mouseout","closePopup","mapRef","useRef","current","center","zoom","layers","tileLayer","attribution","markerRef","navigator","geolocation","getCurrentPosition","LatLng","coords","latitude","longitude","marker","addTo","geoJSON","pointToLayer","onEachFeature","console","log","chartConfig","type","labels","datos","fecha","datasets","fallecidos","borderColor","borderWidth","positivos","options","scales","yAxes","ticks","beginAtZero","Chart","chartContainer","setChartInstance","newChartInstance","Chartjs","ref","theme","paper","padding","spacing","textAlign","palette","text","secondary","paper_header","alerta","marginTop","fontWeight","mapa","breakpoints","down","cargando","fontSize","App","confirma","setConfirma","lat","lng","Grid","item","xs","sm","md","lg","xl","backgroundColor","lineHeight","date","severity","elevation","variant","titulo","confirmados","recuperados","total_mundo","minHeight","Estadistica","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0f860ab8.chunk.js","sourcesContent":["export const URL = 'https://sunny-studio-271511.appspot.com';\nexport const URL_TABLA = 'https://sunny-studio-271511.appspot.com/api/v1/coronavirus/argentina/provincia';","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { URL_TABLA } from './../data/config';\n\nconst columns = [\n  { id: 'provincia', label: 'Provincia', minWidth: 150 },\n  { id: 'ciudad', label: 'Ciudad', minWidth: 150 },\n  {\n    id: 'confirmados',\n    label: 'Confirmados',\n    minWidth: 150,\n    align: 'center'\n  },\n  {\n    id: 'fallecidos',\n    label: 'Fallecidos',\n    minWidth: 150,\n    align: 'center'\n  },\n  //   {\n  //     id: 'recuperados',\n  //     label: 'Recuperados',\n  //     minWidth: 170,\n  //     align: 'center'\n  //   },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  //   table_head: {\n  //       backgroundColor: 'rgb(34, 34, 34)',\n  //       color: '#fff'\n  //   }\n});\n\nexport default function Tabla() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const [tabla, setTabla] = React.useState([]);\n\n  React.useEffect(() => {\n      axios.get(URL_TABLA).then((res) => {\n        setTabla(res.data.tabla);\n      })\n  }, []);\n\n  const rows = tabla.map(e => e)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                  className={classes.table_head}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1}>\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport socketIOClient from \"socket.io-client\";\nimport { URL } from './../data/config';\n\nconst style = {\n  wrapper: {\n    height: '100%',\n    width: '100%',\n    margin: '0 auto',\n    display: 'flex'\n  },\n  map: {\n    flex: 1\n  }\n};\n\nconst geojsonMarkerOptions2017 = {\n  radius: 4,\n  fillColor: \"#EE4266\",\n  color: \"#EE4266\",\n  weight: 5,\n  opacity: 1,\n  fillOpacity: 0.4\n};\n\nexport default function Map({ markerPosition }) {\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const socket = socketIOClient(URL);\n    socket.on(\"FromMapa\", e => {\n      setData(e)\n    })\n  }, [])\n\n  const pointToLayer2017 = (feature, latlng) => {\n    return L.circleMarker(latlng, geojsonMarkerOptions2017);\n  }\n\n  const handleOnEachFeature = (features, layer) => {\n    let popupContent = \"\";\n    if (features.properties && features.properties.lugar) {\n      popupContent = features.properties.lugar\n    }\n    layer.bindPopup(popupContent);\n    layer.on({\n      mouseover: e => {\n        layer.openPopup();\n      },\n      mouseout: e => {\n        layer.closePopup();\n      }\n    });\n  };\n\n  const mapRef = useRef(null);\n  useEffect(() => {\n    mapRef.current = L.map(\"map\", {\n      center: [-38.4160957, -63.6166725],\n      zoom: 4,\n      layers: [\n        L.tileLayer(\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\", {\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        })\n      ]\n    });\n  }, []);\n\n  const markerRef = useRef(null);\n  useEffect(\n    () => {\n      navigator.geolocation.getCurrentPosition((markerPosition) => {\n        let latlng = new L.LatLng(markerPosition.coords.latitude, markerPosition.coords.longitude);\n        markerRef.current = L.marker(latlng).addTo(mapRef.current).bindPopup(\"Mi posición\").openPopup() && L.geoJSON(data, {\n          style: geojsonMarkerOptions2017, pointToLayer: pointToLayer2017, onEachFeature: handleOnEachFeature\n        }).addTo(mapRef.current);\n      })\n    },\n    [markerPosition, data]\n  );\n\n  return <div style={style.wrapper}><div id=\"map\" style={style.map} /> </div>;\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Chartjs from \"chart.js\";\nimport data from '../data/data.json'\n\nconsole.log(data)\nconst chartConfig = {\n    type: \"line\",\n    data: {\n        labels: data.datos.map(e => e.fecha),\n        datasets: [\n            {\n                label: \"Fallecidos\",\n                data: data.datos.map(e => e.fallecidos),\n                borderColor: [\n                    \"rgba(255, 99, 132, 1)\"\n                ],\n                borderWidth: 1\n            },\n            {\n                label: \"Confirmados\",\n                data: data.datos.map(e => e.positivos),\n                borderColor: [\n                    \"rgb(112, 168, 0)\"\n                ],\n                borderWidth: 1\n            }\n        ]\n    },\n    options: {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }\n            ]\n        }\n    }\n};\n\nconst Chart = () => {\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n\n    useEffect(() => {\n        if (chartContainer && chartContainer.current) {\n            const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer]);\n\n    const updateDataset = (datasetIndex, newData) => {\n        chartInstance.data.datasets[datasetIndex].data = newData;\n        chartInstance.update();\n    };\n\n    return (\n        <canvas ref={chartContainer} />\n    );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport socketIOClient from \"socket.io-client\";\nimport { URL } from './data/config';\n\nimport Tabla from './components/Tabla'\nimport Map from './components/Map'\nimport Estadistica from './components/Estadistica'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paper_header: {\n    padding: theme.spacing(2),\n    //textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  alerta: {\n    marginTop: theme.spacing(2),\n    color: \"#fff\",\n    fontWeight: 500\n  },\n  mapa: {\n    [theme.breakpoints.down('xs', 'sm')]: {\n      padding: '50px',\n      height: '50vh'\n    }\n  },\n  cargando: {\n    fontSize: '15px',\n    fontWeight: 300\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [confirma, setConfirma] = useState({});\n\n  const [markerPosition, setMarkerPosition] = useState({\n    lat: -38.4160957,\n    lng: -63.6166725\n  });\n\n  const cargando = 'cargando datos...'\n\n  useEffect(() => {\n    const socket = socketIOClient(URL);\n    socket.on(\"FromTemperatura\", e => {\n      setConfirma(e)\n    })\n  }, [])\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n          <Paper className={classes.paper} style={{ backgroundColor: \"#222\", color: \"#fff\", padding: '3px', lineHeight: '28px' }}>\n            <h1>CORONAVIRUS ARGENTINA <br></br> <span style={{ fontSize: '12px' }}>ÚLTIMA ACTUALIZACIÓN: {confirma.date}</span></h1>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n          <MuiAlert severity=\"error\" elevation={6} variant=\"filled\">\n            Disculpé las molestias! Si no carga los datos es por las miles de visitas que estamos recibiendo!\n            </MuiAlert>\n          <MuiAlert severity=\"info\" elevation={6} variant=\"filled\" className={classes.alerta}>\n            {confirma.titulo ? confirma.titulo : 'Estamos mejorando para que tengan una mejor experiencia'}\n          </MuiAlert>\n        </Grid>\n\n        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\n          {/* ----- */}\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n              <Paper className={classes.paper} style={{ fontSize: \"1.2em\", backgroundColor: \"#222\", color: \"rgb(112, 168, 0)\" }}>\n                <h2>CONFIRMADOS <br></br> {confirma.confirmados ? confirma.confirmados : <span className={classes.cargando}>{cargando}</span>}</h2>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n              <Paper className={classes.paper} style={{ fontSize: \"1.2em\", backgroundColor: \"#222\", color: \"rgb(230, 0, 0)\", fontWeight: \"bold\" }}>\n                <h2>FALLECIDOS <br></br> {confirma.fallecidos ? confirma.fallecidos : <span className={classes.cargando}>{cargando}</span>}</h2>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n              <Paper className={classes.paper} style={{ backgroundColor: \"#222\", color: \"rgb(112, 168, 0)\" }}>\n                <h2>RECUPERADOS <br></br> {confirma.recuperados ? confirma.recuperados : <span className={classes.cargando}>{cargando}</span>}</h2>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n              <Paper className={classes.paper} style={{ fontSize: \"1.06em\", backgroundColor: \"#222\", color: \"rgb(230, 0, 0)\", fontWeight: \"bold\" }}>\n                <h2>TOTAL MUNDO <br></br> {confirma.total_mundo ? confirma.total_mundo : <span className={classes.cargando}>{cargando}</span>}</h2>\n              </Paper>\n            </Grid>\n          </Grid>\n          {/* ----- */}\n        </Grid>\n        <Grid item xs={12} sm={12} md={8} lg={8} xl={8} className={classes.mapa}>\n          <Map markerPosition={markerPosition}> </Map>\n        </Grid>\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\n          <Tabla />\n        </Grid>\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\n          <Paper style={{padding: \"15px\", minHeight: \"460px\"}}>\n            <Estadistica />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}