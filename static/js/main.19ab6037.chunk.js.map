{"version":3,"sources":["components/Map.jsx","App.js","serviceWorker.js","index.js"],"names":["style","wrapper","height","width","margin","display","map","flex","geojsonMarkerOptions2017","radius","fillColor","color","weight","opacity","fillOpacity","Map","markerPosition","pointToLayer2017","feature","latlng","L","circleMarker","handleOnEachFeature","features","layer","popupContent","properties","lugar","bindPopup","on","mouseover","e","openPopup","mouseout","closePopup","mapRef","useRef","useEffect","current","center","zoom","layers","tileLayer","attribution","markerRef","navigator","geolocation","getCurrentPosition","LatLng","coords","latitude","longitude","marker","addTo","geoJSON","places2017","pointToLayer","onEachFeature","id","useStyles","makeStyles","theme","root","paper","padding","spacing","textAlign","palette","text","secondary","paper_header","alerta","marginTop","fontWeight","mapa","breakpoints","down","cargando","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","classes","useState","confirma","setConfirma","lat","lng","socketIOClient","className","Grid","container","item","xs","sm","md","lg","xl","Paper","backgroundColor","lineHeight","date","severity","elevation","variant","titulo","confirmados","fallecidos","recuperados","total_mundo","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.19ab6037.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport places2017 from '../data/data.json';\n\nconst style = {\n  wrapper: {\n    height: '100%',\n    width: '100%',\n    margin: '0 auto',\n    display: 'flex'\n  },\n  map: {\n    flex: 1\n  }\n};\n\nconst geojsonMarkerOptions2017 = {\n  radius: 4,\n  fillColor: \"#EE4266\",\n  color: \"#EE4266\",\n  weight: 5,\n  opacity: 1,\n  fillOpacity: 0.4\n};\n\nfunction Map({ markerPosition }) {\n  \n  const pointToLayer2017 = (feature, latlng) => {\n    return L.circleMarker(latlng, geojsonMarkerOptions2017);\n  }\n\n  const handleOnEachFeature = (features, layer) => {\n    let popupContent = \"\";\n    if (features.properties && features.properties.lugar) {\n      popupContent = features.properties.lugar\n    }\n    layer.bindPopup(popupContent);\n    layer.on({\n      mouseover: e => {\n        layer.openPopup();\n      },\n      mouseout: e => {\n        layer.closePopup();\n      }\n    });\n  };\n  \n  const mapRef = useRef(null);\n  useEffect(() => {\n    mapRef.current = L.map(\"map\", {\n      center: [-38.4160957, -63.6166725],\n      zoom: 4,\n      layers: [\n        L.tileLayer(\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\", {\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        })\n      ]\n    });\n  }, []);\n\n  const markerRef = useRef(null);\n  useEffect(\n    () => {\n      navigator.geolocation.getCurrentPosition((markerPosition) => {\n        let latlng = new L.LatLng(markerPosition.coords.latitude, markerPosition.coords.longitude);\n        markerRef.current = L.marker(latlng).addTo(mapRef.current).bindPopup(\"Mi posición\").openPopup() && L.geoJSON(places2017, {\n          style: geojsonMarkerOptions2017, pointToLayer: pointToLayer2017, onEachFeature: handleOnEachFeature\n        }).addTo(mapRef.current);\n      })\n    },\n    [markerPosition]\n  );\n\n  return <div style={style.wrapper}><div id=\"map\" style={style.map} /> </div>;\n}\n\nexport default Map;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MuiAlert from '@material-ui/lab/Alert';\n// import Axios from \"axios\";\nimport socketIOClient from \"socket.io-client\";\n\nimport Map from './components/Map'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paper_header: {\n    padding: theme.spacing(2),\n    //textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  alerta: {\n    marginTop: theme.spacing(2),\n    color: \"#fff\", \n    fontWeight: 500\n  },\n  mapa: {\n    [theme.breakpoints.down('xs', 'sm')]: {\n      padding: '50px',\n      height: '50vh'\n    }\n  },\n  cargando: {\n    fontSize: '15px',\n    fontWeight: 300\n  }\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    // const [data, setData] = useState({ items: {} });\n    const [confirma, setConfirma] = useState({});\n\n    const [markerPosition, setMarkerPosition] = useState({\n      lat: -38.4160957,\n      lng: -63.6166725\n    });\n\n    const { lat, lng } = markerPosition;\n    const cargando = 'cargando datos...'\n    // useEffect(() => {\n    //   const fetchData = async () => {\n    //     const result = await Axios(\n    //       'https://sunny-studio-271511.appspot.com/api/v1/coronavirus',\n    //     );\n    //     setData(result.data);\n    //   };\n    //   fetchData();\n    // }, []);\n\n    useEffect( () => {\n      const socket = socketIOClient('https://sunny-studio-271511.appspot.com');\n      socket.on(\"FromTemperatura\", e => {\n        setConfirma(e)\n      })\n    }, [])\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <Paper className={classes.paper} style={{backgroundColor: \"#222\", color: \"#fff\", padding: '3px', lineHeight: '28px'}}>\n              <h1>CORONAVIRUS ARGENTINA <br></br> <span style={{fontSize: '12px'}}>ÚLTIMA ACTUALIZACIÓN: {confirma.date}</span></h1>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\n            <MuiAlert severity=\"error\" elevation={6} variant=\"filled\">\n              Disculpé las molestias! Si no carga los datos es por las miles de visitas que estamos recibiendo!\n            </MuiAlert>\n            <MuiAlert severity=\"info\" elevation={6} variant=\"filled\" className={classes.alerta}>\n              {confirma.titulo ? confirma.titulo : 'Estamos mejorando para que tengan una mejor experiencia'}\n            </MuiAlert>\n          </Grid>\n          \n          <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\n            {/* ----- */}\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                <Paper className={classes.paper} style={{fontSize: \"1.2em\", backgroundColor: \"#222\", color: \"rgb(112, 168, 0)\"}}>\n                  <h2>CONFIRMADOS <br></br> {confirma.confirmados ? confirma.confirmados : <span className={classes.cargando}>{cargando}</span>}</h2>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                <Paper className={classes.paper} style={{fontSize: \"1.2em\", backgroundColor: \"#222\", color: \"rgb(230, 0, 0)\", fontWeight: \"bold\"}}>\n                  <h2>FALLECIDOS <br></br> {confirma.fallecidos ? confirma.fallecidos : <span className={classes.cargando}>{cargando}</span>}</h2>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                <Paper className={classes.paper} style={{backgroundColor: \"#222\", color: \"rgb(112, 168, 0)\"}}>\n                  <h2>RECUPERADOS <br></br> {confirma.recuperados ? confirma.recuperados : <span className={classes.cargando}>{cargando}</span>}</h2>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n                <Paper className={classes.paper} style={{fontSize: \"1.06em\", backgroundColor: \"#222\", color: \"rgb(230, 0, 0)\", fontWeight: \"bold\"}}>\n                  <h2>TOTAL MUNDO <br></br> {confirma.total_mundo ? confirma.total_mundo : <span className={classes.cargando}>{cargando}</span>}</h2>\n                </Paper>\n              </Grid>\n            </Grid>\n            {/* ----- */}\n          </Grid>\n          <Grid item xs={12} sm={12} md={8} lg={8} xl={8} className={classes.mapa}>\n            <Map markerPosition={markerPosition}> </Map>\n          </Grid>\n        </Grid>\n        </div>    \n        );\n }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}